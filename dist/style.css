
#app{
  text-align: center;
}
.title {
  text-align: center;
  margin-bottom: 50px;
}
.blog-post {
  text-align: center;
}


.active {
  color: red;
}
.static{
    font-size:30px;
    border:5px solid lightcoral;
}


hr {
  height: 10px;
  background: lightblue;
}


button[data-v-948437d6] {
  height: 30px;
  width: 50px;
  border-radius: 10px;
  font-size: 18px;
  background: white;
  border: none;
  color:white;
}
button[data-v-948437d6]:focus{
    outline: none;
}
button[data-v-948437d6]:hover{
    background: rgb(5, 73, 116) !important;
}

* {    padding: 0;    margin: 0;    box-sizing: border-box;}
h2 {    font-size: 28px;    color: royalblue;}
i{
    display:inline-block;
}
/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-iconb {
  background-image: url(images/48e161bb6524dbc1344ee96d83dd7f3b.png);
  background-position: 0px 0px;
  width: 233px;
  height: 206px;
}
.icon-icona {
  background-image: url(images/48e161bb6524dbc1344ee96d83dd7f3b.png);
  background-position: 0px -206px;
  width: 217px;
  height: 209px;
}

